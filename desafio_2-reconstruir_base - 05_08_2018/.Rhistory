}
print(fileName[-4])
print(fileName[1])
fileList['Name']
fileName
fileList
fileList["Name"]
fileList["Name"][0]
fileList["Name"][1]
fileList["Name"][1][0]
fileList["Name"][1][1]
fileList["Name"][10]
fileList["Name"][]
fileList["Name"]
for(fileName in fileList["Name"]){
print(fileName)
}
list(fileList["Name"])
fileList["Name"]
c(fileList["Name"])
fileList["Name"]
for(fileName in c(fileList["Name"])){
print(fileName)
}
c(fileList["Name"])
fileName
as.list(fileName)
for(fileName in as.list(fileList["Name"])){
print(fileName)
}
as.list(fileName)
as.list(fileList["Name"])
melt
fileList$Name
for(fileName in fileList$Name){
print(fileName)
}
fileName
View(data)
fileName
fileName[3]
fileName[1]
fileName[1][2]
vectName = c(fileName)
vectName[3]
str_sub(fileName,-6,-1)
load(stringr)
library(library(ggplot2)
)
library(stringr)
str_sub(fileName,-6,-1)
str_sub(fileName,-4,-1)
for(fileName in fileList$Name){
nameEnd = str_sub(fileName,-4,-1)
if(nameEnd == ".csv"){
print(fileName)
}
}
source('~/MEGA/R/RDojo/desafio_2-reconstruir_base - 05_08_2018/script.r', echo=TRUE)
for(fileName in fileList$Name){
nameEnd = str_sub(fileName,-4,-1)
if(nameEnd == ".csv"){
data <- read.table(unz("specdata.zip", fileName), header=T, quote='\"',sep=',')
}
}
str_sub(fileName,-4,-1)
data
data1 <- read.table(unz("specdata.zip", "specdata/001.csv"), header=T, quote='\"',sep=',')
do.call(rbind, list(data,data1))
do.call(rbind, list(data,data1))
rbind(data,data1)
data1
data
names(data)
names(data1)
rbind(data,data1)
rbind(data,data1)
cbind(data,data1)
rbind(data,data1)
rbind(data1,data)
data2 = rbind(data1,data)
dataList = c()
for(fileName in fileList$Name){
nameEnd = str_sub(fileName,-4,-1)
if(nameEnd == ".csv"){
data <- read.table(unz("specdata.zip", fileName), header=T, quote='\"',sep=',')
dataList = append(dataList,data)
}
}
Data = do.call(rbind, dataList)
len(dataList)
length(dataList)
dataList
data
data2
a = 0
a+=1
dataList = c()
count = 0
for(fileName in fileList$Name){
nameEnd = str_sub(fileName,-4,-1)
if(nameEnd == ".csv"){
if(count == 0){
data <- read.table(unz("specdata.zip", fileName), header=T, quote='\"',sep=',')
} else {
data <- rbind(data,read.table(unz("specdata.zip", fileName), header=T, quote='\"',sep=','))
}
count = count + 1
}
}
dataList = c()
count = 0
for(fileName in fileList$Name){
nameEnd = str_sub(fileName,-4,-1)
if(nameEnd == ".csv"){
if(count == 0){
data <- read.table(unz("specdata.zip", fileName), header=T, quote='\"',sep=',')
} else {
print(count)
data <- rbind(data,read.table(unz("specdata.zip", fileName), header=T, quote='\"',sep=','))
}
count = count + 1
}
}
# Write CSV in R
write.csv(data, file = "db_completo.csv.csv")
!TRUE
source('~/MEGA/R/RDojo/desafio_2-reconstruir_base - 05_08_2018/script.r', echo=TRUE)
zippedDataConcatenate <- function(zipName){
# Essa funcao acessa um arquivo zip povoado de arquivos csv(s) referentes a
# uma mesma base de dados. Dai, constroi uma nova base "concatenando" todas
# as bases fragmentadas. Resulta em um arquivo csv saida ("db_completo.csv")
# Pegando a lista de arquivos zipados:
fileList = unzip("specdata.zip", files = NULL, list = TRUE)
# Loop em todos os arquivos dentro do zip:
for(fileName in fileList$Name){
# Acessando o final do nome de cada arquivo:
nameEnd = str_sub(fileName,-4,-1)
# Se o arquivo for do tipo ".csv" aplicaremos a logica a seguir:
if(nameEnd == ".csv"){
# Se o arquivo data ainda nao foi defino, o definiremos:
if(!exists('data')){
data <- read.table(unz("specdata.zip", fileName), header=T, quote='\"',sep=',')
# Caso ele já existe, então adicionaremos o novo fragmento a ele:
} else {
data <- rbind(data,read.table(unz("specdata.zip", fileName), header=T, quote='\"',sep=','))
# Um feedback para acalmar a anciedade da espera (o script pode demorar bastante)
print(fileName)
}
}
}
# Nesse ponto "data" acumulou todo o banco de dados
# Por fim iremos exportar data em um arquivo csv
write.csv(data, file = "db_completo.csv")
}
zippedDataConcatenate("specdata.zip")
zippedDataConcatenate <- function(zipName){
# Essa funcao acessa um arquivo zip povoado de arquivos csv(s) referentes a
# uma mesma base de dados. Dai, constroi uma nova base "concatenando" todas
# as bases fragmentadas. Resulta em um arquivo csv saida ("db_completo.csv")
# Pegando a lista de arquivos zipados:
fileList = unzip(zipName, files = NULL, list = TRUE)
# Loop em todos os arquivos dentro do zip:
for(fileName in fileList$Name){
# Acessando o final do nome de cada arquivo:
nameEnd = str_sub(fileName,-4,-1)
# Se o arquivo for do tipo ".csv" aplicaremos a logica a seguir:
if(nameEnd == ".csv"){
# Se o arquivo data ainda nao foi defino, o definiremos:
if(!exists('data')){
data <- read.table(unz("specdata.zip", fileName), header=T, quote='\"',sep=',')
# Caso ele já existe, então adicionaremos o novo fragmento a ele:
} else {
data <- rbind(data,read.table(unz("specdata.zip", fileName), header=T, quote='\"',sep=','))
# Um feedback para acalmar a anciedade da espera (o script pode demorar bastante)
print(fileName)
}
}
}
# Nesse ponto "data" acumulou todo o banco de dados
# Por fim iremos exportar data em um arquivo csv
write.csv(data, file = "db_completo.csv")
}
zippedDataConcatenate("specdata.zip")
zippedDataConcatenate("specdata.zip")
data <- rbind(data,read.table(unz("specdata.zip", fileName), header=T, quote='\"',sep=','))
zippedDataConcatenate <- function(zipName){
# Essa funcao acessa um arquivo zip povoado de arquivos csv(s) referentes a
# uma mesma base de dados. Dai, constroi uma nova base "concatenando" todas
# as bases fragmentadas. Resulta em um arquivo csv saida ("db_completo.csv")
# Pegando a lista de arquivos zipados:
fileList = unzip(zipName, files = NULL, list = TRUE)
# Loop em todos os arquivos dentro do zip:
for(fileName in fileList$Name){
# Acessando o final do nome de cada arquivo:
nameEnd = str_sub(fileName,-4,-1)
# Se o arquivo for do tipo ".csv" aplicaremos a logica a seguir:
if(nameEnd == ".csv"){
# Se o arquivo data ainda nao foi defino, o definiremos:
if(!exists('data')){
data <- read.table(unz("specdata.zip", fileName), header=T, quote='\"',sep=',')
# Caso ele já existe, então adicionaremos o novo fragmento a ele:
} else {
data <- rbind(data,read.table(unz("specdata.zip", fileName), header=T, quote='\"',sep=','))
# Um feedback para acalmar a anciedade da espera (o script pode demorar bastante)
print(fileName)
}
}
}
# Nesse ponto "data" acumulou todo o banco de dados
# Por fim iremos exportar data em um arquivo csv
write.csv(data, file = "db_completo.csv")
}
zippedDataConcatenate("specdata.zip")
zippedDataConcatenate("specdata.zip")
zippedDataConcatenate("specdata.zip")
View(zippedDataConcatenate)
View(zippedDataConcatenate)
View(zippedDataConcatenate)
zippedDataConcatenate("specdata.zip")
source('~/MEGA/R/RDojo/desafio_2-reconstruir_base - 05_08_2018/script.r', echo=TRUE)
source('~/MEGA/R/RDojo/desafio_2-reconstruir_base - 05_08_2018/script.r', echo=TRUE)
zippedDataConcatenate("specdata.zip")
exists('data'
)
data()
df
Da
Data
source('~/MEGA/R/RDojo/desafio_2-reconstruir_base - 05_08_2018/script.r', echo=TRUE)
source('~/MEGA/R/RDojo/desafio_2-reconstruir_base - 05_08_2018/script.r', echo=TRUE)
Data <- read.table("db_completo.csv", header=T, quote='\"',sep=',')
source('~/MEGA/R/RDojo/desafio_2-reconstruir_base - 05_08_2018/script.r', echo=TRUE)
Data <- read.table("db_completo.csv", header=T, quote='\"',sep=',')
View(Data)
source('~/MEGA/R/RDojo/desafio_2-reconstruir_base - 05_08_2018/script.r', echo=TRUE)
source('~/MEGA/R/RDojo/desafio_2-reconstruir_base - 05_08_2018/script.r', echo=TRUE)
summary(Data)
summary(Data)["sulfate"]
Data[ID == 1]
names(Data)
Data[$ID == 1]
Data$ID == 1
Data[Data$ID == 1]
Data[Data$ID == 1,]
summary(Data[Data$ID == 1,])
unique(Data$ID)
names(Data)
X <- data.frame(bad=1:3, worse=rnorm(3))
bad = c(1,2,3)
worse = (c(21,21,21))
X <- data.frame(bad, worse)
X
length(Data)
nrow(Data)
22/nrow(Data)
22222/nrow(Data)
a = c(1)
a + c(2)
cbind(a,c(2))
a[0]
a[1]
a[2]
a[1][1]
a[1][2]
a
a
acbind(a,c(2))
a = cbind(a,c(2))
a
a[1]
a[2]
SulfateNAsPercent = c()
NitrateNAsPercent = c()
for (id in ids){
data = Data[Data$ID == id,]
n = nrow(data)
sulfateNAs = sum(is.na(data$sulfate))
nitrateNAs = sum(is.na(data$nitrate))
sulfateNAsPercent = n/sulfatePercent
nitrateNasPercent = n/nitratePercent
SulfateNAsPercent = cbind(SulfateNAsPercent,sulfateNAsPercent)
NitrateNAsPercent = cbind(NitrateNAsPercent,nitrateNAsPercent)
}
ids = unique(Data$ID)
for (id in ids){
data = Data[Data$ID == id,]
n = nrow(data)
sulfateNAs = sum(is.na(data$sulfate))
nitrateNAs = sum(is.na(data$nitrate))
sulfateNAsPercent = n/sulfatePercent
nitrateNasPercent = n/nitratePercent
SulfateNAsPercent = cbind(SulfateNAsPercent,sulfateNAsPercent)
NitrateNAsPercent = cbind(NitrateNAsPercent,nitrateNAsPercent)
}
for (id in ids){
data = Data[Data$ID == id,]
n = nrow(data)
sulfateNAs = sum(is.na(data$sulfate))
nitrateNAs = sum(is.na(data$nitrate))
sulfateNAsPercent = n/sulfateNAs
nitrateNasPercent = n/nitrateNAs
SulfateNAsPercent = cbind(SulfateNAsPercent,sulfateNAsPercent)
NitrateNAsPercent = cbind(NitrateNAsPercent,nitrateNAsPercent)
}
for (id in ids){
data = Data[Data$ID == id,]
n = nrow(data)
sulfateNAs = sum(is.na(data$sulfate))
nitrateNAs = sum(is.na(data$nitrate))
sulfateNAsPercent = n/sulfateNAs
nitrateNAsPercent = n/nitrateNAs
SulfateNAsPercent = cbind(SulfateNAsPercent,sulfateNAsPercent)
NitrateNAsPercent = cbind(NitrateNAsPercent,nitrateNAsPercent)
}
NAsData <- data.frame(ids,SulfateNAsPercent, NitrateNAsPercent)
View(NAsData)
View(NAsData)
View(NAsData)
summary(SulfateNAsPercent)
for (id in ids){
data = Data[Data$ID == id,]
n = nrow(data)
sulfateNAs = sum(is.na(data$sulfate))
nitrateNAs = sum(is.na(data$nitrate))
sulfateNAsPercent = n/sulfateNAs
nitrateNAsPercent = n/nitrateNAs
print(sulfateNAsPercent)
SulfateNAsPercent = cbind(SulfateNAsPercent,sulfateNAsPercent)
NitrateNAsPercent = cbind(NitrateNAsPercent,nitrateNAsPercent)
}
for (id in ids){
data = Data[Data$ID == id,]
n = nrow(data)
sulfateNAs = sum(is.na(data$sulfate))
nitrateNAs = sum(is.na(data$nitrate))
sulfateNAsPercent = sulfateNAs/n
nitrateNAsPercent = nitrateNAs/n
SulfateNAsPercent = cbind(SulfateNAsPercent,c(sulfateNAsPercent))
NitrateNAsPercent = cbind(NitrateNAsPercent,c(nitrateNAsPercent))
}
SulfateNAsPercent
NAsData <- data.frame(ids,SulfateNAsPercent, NitrateNAsPercent)
ids
list(ids)
list(NitrateNAsPercent)
as.list(NitrateNAsPercent)
NAsData <- data.frame(ids,as.list(SulfateNAsPercent), as.list(NitrateNAsPercent))
SulfateNAsPercent = list()
NitrateNAsPercent = list()
for (id in ids){
data = Data[Data$ID == id,]
n = nrow(data)
sulfateNAs = sum(is.na(data$sulfate))
nitrateNAs = sum(is.na(data$nitrate))
sulfateNAsPercent = sulfateNAs/n
nitrateNAsPercent = nitrateNAs/n
SulfateNAsPercent = cbind(SulfateNAsPercent,c(sulfateNAsPercent))
NitrateNAsPercent = cbind(NitrateNAsPercent,c(nitrateNAsPercent))
}
NAsData <- data.frame(ids,SulfateNAsPercent, NitrateNAsPercent)
SulfateNAsPercent = list()
NitrateNAsPercent = list()
for (id in ids){
data = Data[Data$ID == id,]
n = nrow(data)
sulfateNAs = sum(is.na(data$sulfate))
nitrateNAs = sum(is.na(data$nitrate))
sulfateNAsPercent = sulfateNAs/n
nitrateNAsPercent = nitrateNAs/n
SulfateNAsPercent = cbind(SulfateNAsPercent,c(sulfateNAsPercent))
NitrateNAsPercent = cbind(NitrateNAsPercent,c(nitrateNAsPercent))
}
SulfateNAsPercent
Data <- read.table("db_completo.csv", header=T, quote='\"',sep=',')
ids = unique(Data$ID)
SulfateNAsPercent = list()
NitrateNAsPercent = list()
SulfateNAsPercent = c()
NitrateNAsPercent = c()
for (id in ids){
data = Data[Data$ID == id,]
n = nrow(data)
sulfateNAs = sum(is.na(data$sulfate))
nitrateNAs = sum(is.na(data$nitrate))
sulfateNAsPercent = sulfateNAs/n
nitrateNAsPercent = nitrateNAs/n
SulfateNAsPercent = cbind(SulfateNAsPercent,c(sulfateNAsPercent))
NitrateNAsPercent = cbind(NitrateNAsPercent,c(nitrateNAsPercent))
}
NAsData <- data.frame(ids,SulfateNAsPercent, NitrateNAsPercent)
ids
as.list(ids)
c(ids)
list(ids)
ids
list(ids)
as.list(ids)
SulfateNAsPercent
as.list(SulfateNAsPercent)
NAsData <- data.frame(as.list(ids),as.list(SulfateNAsPercent), as.list(NitrateNAsPercent))
SulfateNAsPercent = c()
NitrateNAsPercent = c()
for (id in ids){
data = Data[Data$ID == id,]
n = nrow(data)
sulfateNAs = sum(is.na(data$sulfate))
nitrateNAs = sum(is.na(data$nitrate))
sulfateNAsPercent = sulfateNAs/n
nitrateNAsPercent = nitrateNAs/n
SulfateNAsPercent = cbind(SulfateNAsPercent,c(sulfateNAsPercent))
NitrateNAsPercent = cbind(NitrateNAsPercent,c(nitrateNAsPercent))
}
NAsData <- data.frame(as.list(ids),as.list(SulfateNAsPercent), as.list(NitrateNAsPercent))
View(NAsData)
as.vector(SulfateNAsPercent)
NAsData <- data.frame(ids,as.vector(SulfateNAsPercent), as.vector(NitrateNAsPercent))
View(NAsData)
View(NAsData)
Data <- read.table("db_completo.csv", header=T, quote='\"',sep=',')
ids = unique(Data$ID)
SulfateNAsPercent = c()
NitrateNAsPercent = c()
for (id in ids){
data = Data[Data$ID == id,]
n = nrow(data)
sulfateNAs = sum(is.na(data$sulfate))
nitrateNAs = sum(is.na(data$nitrate))
sulfateNAsPercent = sulfateNAs/n
nitrateNAsPercent = nitrateNAs/n
SulfateNAsPercent = cbind(SulfateNAsPercent,c(sulfateNAsPercent))
NitrateNAsPercent = cbind(NitrateNAsPercent,c(nitrateNAsPercent))
}
SulfateNAsPercent = as.vector(SulfateNAsPercent)
NitrateNAsPercent = as.vector(NitrateNAsPercent)
NAsData <- data.frame(ids,SulfateNAsPercent,NitrateNAsPercent)
summary(Data)
View(NAsData)
TotalNAsPercent = c()
for (id in ids){
data = Data[Data$ID == id,]
n = nrow(data)
sulfateNAs = sum(is.na(data$sulfate))
nitrateNAs = sum(is.na(data$nitrate))
sulfateNAsPercent = sulfateNAs/n
nitrateNAsPercent = nitrateNAs/n
totalNAsPercent = (nitrateNAsPercent+sulfateNAsPercent)/2
SulfateNAsPercent = cbind(SulfateNAsPercent,c(sulfateNAsPercent))
NitrateNAsPercent = cbind(NitrateNAsPercent,c(nitrateNAsPercent))
TotalNAsPercent = cbind(TotalNAsPercent,c(totalNAsPercent))
}
SulfateNAsPercent = as.vector(SulfateNAsPercent)
NitrateNAsPercent = as.vector(NitrateNAsPercent)
TotalNAsPercent = as.vector(TotalNAsPercent)
NAsData <- data.frame(ids,SulfateNAsPercent,NitrateNAsPercent,TotalNAsPercent)
}
TotalNAsPercent
Data <- read.table("db_completo.csv", header=T, quote='\"',sep=',')
ids = unique(Data$ID)
SulfateNAsPercent = c()
NitrateNAsPercent = c()
TotalNAsPercent = c()
for (id in ids){
data = Data[Data$ID == id,]
n = nrow(data)
sulfateNAs = sum(is.na(data$sulfate))
nitrateNAs = sum(is.na(data$nitrate))
sulfateNAsPercent = sulfateNAs/n
nitrateNAsPercent = nitrateNAs/n
totalNAsPercent = (nitrateNAsPercent+sulfateNAsPercent)/2
SulfateNAsPercent = cbind(SulfateNAsPercent,c(sulfateNAsPercent))
NitrateNAsPercent = cbind(NitrateNAsPercent,c(nitrateNAsPercent))
TotalNAsPercent = cbind(TotalNAsPercent,c(totalNAsPercent))
}
SulfateNAsPercent = as.vector(SulfateNAsPercent)
NitrateNAsPercent = as.vector(NitrateNAsPercent)
TotalNAsPercent = as.vector(TotalNAsPercent)
NAsData <- data.frame(ids,SulfateNAsPercent,NitrateNAsPercent,TotalNAsPercent)
return(NAsD)
unknowDataExploration <- function(inputName){
ids = unique(Data$ID)
ids = unique(Data$ID)cxzc
zxcsd
unknowDataExploration <- function(inputName){
Data <- read.table(inputName, header=T, quote='\"',sep=',')
ids = unique(Data$ID)
SulfateNAsPercent = c()
NitrateNAsPercent = c()
TotalNAsPercent = c()
for (id in ids){
data = Data[Data$ID == id,]
n = nrow(data)
sulfateNAs = sum(is.na(data$sulfate))
nitrateNAs = sum(is.na(data$nitrate))
sulfateNAsPercent = sulfateNAs/n
nitrateNAsPercent = nitrateNAs/n
totalNAsPercent = (nitrateNAsPercent+sulfateNAsPercent)/2
SulfateNAsPercent = cbind(SulfateNAsPercent,c(sulfateNAsPercent))
NitrateNAsPercent = cbind(NitrateNAsPercent,c(nitrateNAsPercent))
TotalNAsPercent = cbind(TotalNAsPercent,c(totalNAsPercent))
}
SulfateNAsPercent = as.vector(SulfateNAsPercent)
NitrateNAsPercent = as.vector(NitrateNAsPercent)
TotalNAsPercent = as.vector(TotalNAsPercent)
NAsData <- data.frame(ids,SulfateNAsPercent,NitrateNAsPercent,TotalNAsPercent)
return(NAsData)
}
unknowDataExploration("db_completo.csv")
summary(Data)
summary(Data)
sumary(Data)
summ ary(Data)
